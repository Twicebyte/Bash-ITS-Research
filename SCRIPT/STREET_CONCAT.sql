DROP TABLE StreetsLists

SELECT x.LINENAME, x.DIRECTIONCODE, STRING_AGG(OUTERNAME,', ') WITHIN GROUP (ORDER BY STRNUM ASC) as STREETS 
INTO StreetsLists 
FROM (
SELECT LINENAME, DIRECTIONCODE, STRNUM, MIN([INDEX]) indx, CASE WHEN OUTERNAME like '"%' THEN REPLACE(SUBSTRING(OUTERNAME,2,LEN(OUTERNAME)-2),'""','"') ELSE OUTERNAME END OUTERNAME
FROM STREETSTEST WHERE OUTERNAME not like '' GROUP BY LINENAME, DIRECTIONCODE, OUTERNAME, STRNUM 
) x 
join
(SELECT LINENAME, DIRECTIONCODE, MAX([INDEX]) IND FROM STREETSTEST GROUP BY LINENAME, DIRECTIONCODE) y
on (x.LINENAME like y.LINENAME and x.DIRECTIONCODE like y.DIRECTIONCODE)
--WHERE IND>INDX
GROUP BY x.LINENAME, x.DIRECTIONCODE ORDER BY x.LINENAME, x.DIRECTIONCODE;


UPDATE STREETSTEST SET STRNUM=NULL
UPDATE STREETSTEST SET STRNUM=1 WHERE [INDEX]=1

WHILE (SELECT COUNT(*) FROM STREETSTEST WHERE STRNUM is NULL) > 0
BEGIN
UPDATE a SET a.STRNUM=b.STRNUM FROM STREETSTEST a join STREETSTEST b ON (b.STRNUM is not null 
and a.LINENAME like b.LINENAME 
and (a.OUTERNAME like b.OUTERNAME or a.OUTERNAME is NULL)
and a.DIRECTIONCODE like b.DIRECTIONCODE 
and a.[INDEX]=b.[INDEX]+1) WHERE a.STRNUM is NULL;
UPDATE a SET a.STRNUM=b.STRNUM+1 FROM STREETSTEST a join STREETSTEST b ON (b.STRNUM is not null 
and a.LINENAME like b.LINENAME 
and ((a.OUTERNAME not like b.OUTERNAME) and (a.OUTERNAME is not NULL and b.OUTERNAME is not NULL))
and a.DIRECTIONCODE like b.DIRECTIONCODE 
and a.[INDEX]=b.[INDEX]+1) WHERE a.STRNUM is NULL;
END


WHILE (SELECT COUNT(*) FROM STREETSTEST WHERE OUTERNAME is NULL) > 0
BEGIN
UPDATE a SET a.OUTERNAME=b.OUTERNAME FROM STREETSTEST a join STREETSTEST b ON 
(b.OUTERNAME is not null and a.OUTERNAME is null
and a.LINENAME like b.LINENAME 
and a.DIRECTIONCODE like b.DIRECTIONCODE 
and a.[INDEX]=b.[INDEX]+1);
END


SELECT * FROM STREETSTEST

SELECT ISNULL(a.LINENAME,b.LINENAME) LINENAME, 
ISNULL(a.DIRECTIONCODE,b.DIRECTIONCODE) DIRECTIONCODE, 
a.STREETS FWD, b.STREETS BWD FROM 
(SELECT * FROM StreetsLists WHERE DIRECTIONCODE like '>') a FULL join 
(SELECT * FROM StreetsLists WHERE DIRECTIONCODE like '<') b on (a.LINENAME like b.LINENAME)

SELECT a.ID,a.NUMBER,a.NAME,a.DISTANCE,b.FWD,b.BWD,a.FWD,a.BWD,MAX_BUS,A_CLASS,B_CLASS,C_CLASS FROM
(
SELECT a.ID,a.NUMBER,a.NAME,b.LINENAME,a.DISTANCE,a.FORWARD_STOPS,a.BACKWARD_STOPS,b.FWD,b.BWD,MAX_BUS,A_CLASS,B_CLASS,C_CLASS FROM STREETS_TEMPLATE a left join 
(
SELECT ISNULL(a.LINENAME,b.LINENAME) LINENAME,
a.STREETS FWD, b.STREETS BWD FROM 
(SELECT * FROM StreetsLists WHERE DIRECTIONCODE like '>') a FULL join 
(SELECT * FROM StreetsLists WHERE DIRECTIONCODE like '<') b on (a.LINENAME like b.LINENAME)
) b
on (REPLACE(REPLACE(b.LINENAME,'"',''),' ','') like CONCAT('%',replace(replace(a.NUMBER,N'á/í',''),' ',''),replace(replace(a.NAME,'"',''),' ',''),'%')) 
) a
 left join 
(
SELECT ISNULL(a.ROUTE_N_NAME,b.ROUTE_N_NAME) LINENAME,
a.STOPS FWD, b.STOPS BWD FROM 
(SELECT * FROM (SELECT ROUTE_N_NAME,DIR,STRING_AGG(SNAME,', ') WITHIN GROUP (ORDER BY IND ASC) as STOPS  FROM GOTHROUGH
GROUP BY ROUTE_N_NAME,DIR) x WHERE DIR like '>') a FULL join 
(SELECT * FROM (SELECT ROUTE_N_NAME,DIR,STRING_AGG(SNAME,', ') WITHIN GROUP (ORDER BY IND ASC) as STOPS  FROM GOTHROUGH
GROUP BY ROUTE_N_NAME,DIR) x WHERE DIR like '<') b on (a.ROUTE_N_NAME like b.ROUTE_N_NAME)
) b on (a.LINENAME like b.LINENAME);

select * from StreetsLists ORDER BY LINENAME, DIRECTIONCODE

SELECT * FROM STREETS_TEMPLATE

SELECT ROUTE_N_NAME,DIR,STRING_AGG(SNAME,', ') WITHIN GROUP (ORDER BY IND ASC) as STOPS  FROM GOTHROUGH
GROUP BY ROUTE_N_NAME,DIR ORDER BY ROUTE_N_NAME,DIR